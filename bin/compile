#!/usr/bin/env bash

# set -e            # fail fast
# set -o pipefail   # don't ignore exit codes when piping output
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3

bp_dir=$(cd $(dirname $0); cd ..; pwd)

source $bp_dir/bin/common.sh

export LDFLAGS=-L$build_dir/vendor/lib
export LD_LIBRARY_PATH=$build_dir/vendor/lib

download () {
	status "Downloading and installing ZBAR"
  zbar_url="http://iweb.dl.sourceforge.net/project/zbar/zbar/0.10/zbar-0.10.tar.bz2"
  curl $zbar_url -s -o - | tar jxf - -C $build_dir
}

install () {
	if [ -f $build_dir/vendor/zbar ]; then
	  exit 0
	else
		download
  	mkdir -p $build_dir/vendor/bin
	  mv $build_dir/zbar-0.10 $build_dir/vendor/zbar
		cd $build_dir/vendor/zbar
	  LDFLAGS=-s ./configure --disable-video --without-gtk --without-qt --prefix=$build_dir/vendor  
	  make  >/dev/null 2>&1
	  make install  >/dev/null 2>&1
	fi
}



install

topic "Writing profile script"
mkdir -p $build_dir/.profile.d
cat <<EOF >$build_dir/.profile.d/000_zbar.sh
export PATH="\$HOME/vendor/bin:$PATH"
export LD_LIBRARY_PATH="\$HOME/vendor/lib:\$LD_LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/vendor/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
EOF

exit 0